from matplotlib.ticker import NullFormatter
from scipy.stats import pearsonr
import numpy as np
import matplotlib.pyplot as plt
#Read in power[7000][3125]
power = np.loadtxt("2663.txt", dtype = int)
#power = np.loadtxt("traces.txt", dtype = int)
#Read in cipher[7000][16]
cipher = np.loadtxt("ciphers.txt", dtype = int)
 


#uses the array in hints.md
sbox_inv = np.array([
    0x52, 0x09, 0x6A, 0xD5, 0x30, 0x36, 0xA5, 0x38, 0xBF, 0x40, 0xA3, 0x9E, 0x81, 0xF3, 0xD7, 0xFB,
    0x7C, 0xE3, 0x39, 0x82, 0x9B, 0x2F, 0xFF, 0x87, 0x34, 0x8E, 0x43, 0x44, 0xC4, 0xDE, 0xE9, 0xCB,
    0x54, 0x7B, 0x94, 0x32, 0xA6, 0xC2, 0x23, 0x3D, 0xEE, 0x4C, 0x95, 0x0B, 0x42, 0xFA, 0xC3, 0x4E,
    0x08, 0x2E, 0xA1, 0x66, 0x28, 0xD9, 0x24, 0xB2, 0x76, 0x5B, 0xA2, 0x49, 0x6D, 0x8B, 0xD1, 0x25,
    0x72, 0xF8, 0xF6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xD4, 0xA4, 0x5C, 0xCC, 0x5D, 0x65, 0xB6, 0x92,
    0x6C, 0x70, 0x48, 0x50, 0xFD, 0xED, 0xB9, 0xDA, 0x5E, 0x15, 0x46, 0x57, 0xA7, 0x8D, 0x9D, 0x84,
    0x90, 0xD8, 0xAB, 0x00, 0x8C, 0xBC, 0xD3, 0x0A, 0xF7, 0xE4, 0x58, 0x05, 0xB8, 0xB3, 0x45, 0x06,
    0xD0, 0x2C, 0x1E, 0x8F, 0xCA, 0x3F, 0x0F, 0x02, 0xC1, 0xAF, 0xBD, 0x03, 0x01, 0x13, 0x8A, 0x6B,
    0x3A, 0x91, 0x11, 0x41, 0x4F, 0x67, 0xDC, 0xEA, 0x97, 0xF2, 0xCF, 0xCE, 0xF0, 0xB4, 0xE6, 0x73,
    0x96, 0xAC, 0x74, 0x22, 0xE7, 0xAD, 0x35, 0x85, 0xE2, 0xF9, 0x37, 0xE8, 0x1C, 0x75, 0xDF, 0x6E,
    0x47, 0xF1, 0x1A, 0x71, 0x1D, 0x29, 0xC5, 0x89, 0x6F, 0xB7, 0x62, 0x0E, 0xAA, 0x18, 0xBE, 0x1B,
    0xFC, 0x56, 0x3E, 0x4B, 0xC6, 0xD2, 0x79, 0x20, 0x9A, 0xDB, 0xC0, 0xFE, 0x78, 0xCD, 0x5A, 0xF4,
    0x1F, 0xDD, 0xA8, 0x33, 0x88, 0x07, 0xC7, 0x31, 0xB1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xEC, 0x5F,
    0x60, 0x51, 0x7F, 0xA9, 0x19, 0xB5, 0x4A, 0x0D, 0x2D, 0xE5, 0x7A, 0x9F, 0x93, 0xC9, 0x9C, 0xEF,
    0xA0, 0xE0, 0x3B, 0x4D, 0xAE, 0x2A, 0xF5, 0xB0, 0xC8, 0xEB, 0xBB, 0x3C, 0x83, 0x53, 0x99, 0x61,
    0x17, 0x2B, 0x04, 0x7E, 0xBA, 0x77, 0xD6, 0x26, 0xE1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0C, 0x7D], dtype=np.uint8)

Hamm_Dist = np.zeros((7000, 16, 256), dtype=int)
Hamm_Dist_B = np.zeros(7000, dtype = int)
coe = np.zeros((16, 256))
cr = np.zeros(2, dtype=int)
aes_key = np.zeros(16, dtype = int)
index_mapping = [0, 5, 10, 15, 4, 9, 14, 3, 8, 13, 2, 7, 12, 1, 6, 11]

for kj in range(16):
    ki = index_mapping[kj]
    for g in range(256):
        for I in range(7000):
            xr = cipher[I][kj] ^ g
            sbox = sbox_inv[xr]
            sbox = sbox ^ cipher[I][ki]            
            Hamm_Dist[I][kj][g] = bin(sbox).count("1")
        for p in range(7000):
            Hamm_Dist_B[p] = Hamm_Dist[p][kj][g]
        cr = pearsonr(Hamm_Dist_B[0:6999], power[0:6999])
        #cr = pearsonr(Hamm_Dist[0:6999][kj][g], power[0:6999])
        #print("length", len(power[0:6999][2663]))
        
        coe[kj][g] = np.absolute(cr[0])
    aes_key[kj] = np.argmax(coe[kj][0:255])
print(aes_key)
print("Key value in hex") 
for k in aes_key:
    print(hex(k))




fig, axs = plt.subplots(4,4)
axs[0,0].plot(range(255),coe[0][0:255], color='green')
axs[0,0].set_title('Byte 0')
axs[0,1].plot(range(255),coe[1][0:255], color='green')
axs[0,1].set_title('Byte 1')
axs[0,2].plot(range(255),coe[2][0:255], color='green')
axs[0,2].set_title('Byte 2')
axs[0,3].plot(range(255),coe[3][0:255], color='green')
axs[0,3].set_title('Byte 3')
axs[1,0].plot(range(255),coe[4][0:255])
axs[1,0].set_title('Byte 4')
axs[1,1].plot(range(255),coe[5][0:255])
axs[1,1].set_title('Byte 5')
axs[1,2].plot(range(255),coe[6][0:255])
axs[1,2].set_title('Byte 6')
axs[1,3].plot(range(255),coe[7][0:255])
axs[1,3].set_title('Byte 7')
axs[2,0].plot(range(255),coe[8][0:255], color='red')
axs[2,0].set_title('Byte 8')
axs[2,1].plot(range(255),coe[9][0:255], color='red')
axs[2,1].set_title('Byte 9')
axs[2,2].plot(range(255),coe[10][0:255], color='red')
axs[2,2].set_title('Byte 10')
axs[2,3].plot(range(255),coe[11][0:255], color='red')
axs[2,3].set_title('Byte 11')
axs[3,0].plot(range(255),coe[12][0:255], color='yellow')
axs[3,0].set_title('Byte 12')
axs[3,1].plot(range(255),coe[13][0:255], color='yellow')
axs[3,1].set_title('Byte 13')
axs[3,2].plot(range(255),coe[14][0:255], color='yellow')
axs[3,2].set_title('Byte 14')
axs[3,3].plot(range(255),coe[15][0:255], color='yellow')
axs[3,3].set_title('Byte 15')

plt.gca().yaxis.set_minor_formatter(NullFormatter())
plt.subplots_adjust(top=0.9, bottom=0.08, left=0.10, right=0.95, hspace=0.25,wspace=0.35)
for axis in axs.flat:
    axis.label_outer()

plt.show()
      
    
        




        

